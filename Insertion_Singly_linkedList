#include<stdio.h>
#include<stdlib.h>

struct node {
    int data;
    struct node* next;
};

struct node* insertionSort(struct node* head) {
    if (head == NULL || head->next == NULL)
        return head;

    struct node* sorted = NULL;
    struct node* current = head;

    while (current != NULL) {
        struct node* next = current->next;

        if (sorted == NULL || current->data < sorted->data) {
            current->next = sorted;
            sorted = current;
        } else {
            struct node* temp = sorted;
            while (temp->next != NULL && temp->next->data < current->data) {
                temp = temp->next;
            }
            current->next = temp->next;
            temp->next = current;
        }

        current = next;
    }

    return sorted;
}

void display(struct node* head) {
    struct node* temp = head;
    while (temp != NULL) {
        printf("%d", temp->data);
        if (temp->next != NULL)
            printf(" -> ");
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    struct node *p, *q, *head = NULL;
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        p = (struct node*)malloc(sizeof(struct node));
        printf("Enter the element: ");
        scanf("%d", &p->data);
        p->next = NULL;
        if (head == NULL) {
            head = p;
        } else {
            q = head;
            while (q->next != NULL) {
                q = q->next;
            }
            q->next = p;
        }
    }
    printf("Original List: ");
    display(head);
    
    head = insertionSort(head);

    printf("Insertion Sort: ");
    display(head);

    return 0;
}
