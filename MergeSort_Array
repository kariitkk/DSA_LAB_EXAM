#include <stdio.h>
#include <stdlib.h>

void conquer(int arr[], int si, int mid, int ei) {
    int n = ei - si + 1;
    int merged[n];
    int idx1 = si;
    int idx2 = mid + 1;
    int x = 0;

    while (idx1 <= mid && idx2 <= ei) {
        if (arr[idx1] < arr[idx2]) {
            merged[x++] = arr[idx1++];
        } else {
            merged[x++] = arr[idx2++];
        }
    }

    while (idx1 <= mid) {
        merged[x++] = arr[idx1++];
    }
    while (idx2 <= ei) {
        merged[x++] = arr[idx2++];
    }

    for (int i = 0, j = si; i < n; i++, j++) {
        arr[j] = merged[i];
    }
}

void divide(int arr[], int si, int ei) {
    if (si < ei) {
        int mid = (ei + si) / 2;
        divide(arr, si, mid);
        divide(arr, mid + 1, ei);
        conquer(arr, si, mid, ei);
    }
}

void display(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d", arr[i]);
        if (i != n - 1)
            printf(" -> ");
    }
    printf("\n");
}

int main() {
    int n;
    int arr[100];
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        printf("Enter element %d: ", i + 1);
        scanf("%d", &arr[i]);
    }

    printf("Original Array: ");
    display(arr, n);

    divide(arr, 0, n - 1);

    printf("Sorted Array (Merge Sort): ");
    display(arr, n);

    return 0;
}
